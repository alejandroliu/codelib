#!/bin/sh
#
# Daily script
#
scriptdir=$(dirname $(readlink -f $0))
if [ -z "$1" ] ; then
  echo "Must specify a base directory"
  exit 1
fi
world="$1"
  
. $scriptdir/ashlib/rotate.sh
log="$world/logs/daily.log"
rotate $log
exec >>$log 2>&1 9>$world/lock </dev/null

die() {
  local rc="$1" ; shift
  echo "$@" 2>&1
  exit $rc
}
echo '==========================================================='
date
echo '==========================================================='
flock -n -x 9 || die 17 "Failed to obtain lock"
start=$(date +%s)

echo "1. UNDUP"
for fs in \
	/media/xvdb1/d /media/xvdb1/p /media/xvdb1/m \
	/media/xvdc1/p /media/xvdd1/p
do
  echo "FS: $fs"
  time undup -c "$fs/catalogue.txt" -l "$fs.lock" -e -K -S -v "$fs"
done

echo "2. REMOTE BACKUPS"
target=/media/xvdb1/m/a1/backups
snaps=/media/xvdb1/d/snapshots

(
  # Backup NEUSOL PROD data
  zipfile=$target/NeuSol.zip
  url=http://cvm1.localnet/NeuSol
  rm -f $zipfile
  wget -q -O- $url/backup/purge/-30
  wget -O$zipfile $url/backup/run/backup.zip
  unzip -q -d $snaps/NeuSol -o $zipfile
) &

apkvol_snap() {
  (
    SSH_AUTH_SOCK= ssh -i $world/backup_operator.key "$1" ovl | (
      read md5 apkvol
      echo "$1: $apkvol ($md5)"
      mkdir $snaps/$1.t
      tee $target/apkvol/$apkvol | tar -C $snaps/$1.t -zxf -
      if echo "$md5 $apkvol" | ( cd $target/apkvol && md5sum -cw ) ; then
        rm -rf $snaps/$1
	mv $snaps/$1.t $snaps/$1
      else
        rm -rf $snaps/$1.t
      fi
    )
  ) &
}
apkvol_snap cn1

# OpenShift instances backup
openshift_bak() {
  (
    local snap="$target/openshift-$1/snapshot.tar.gz"
    rotate $snap
    SSH_AUTH_SOCK= ssh -i $world/backup_operator.key "$2" gear snapshot > $snap
    ls -sh $snap
  ) &
}
openshift_bak wp2 58127a787628e149710000ee@wp2-iliu.rhcloud.com
openshift_bak appsrv 5763c6dc0c1e660efc000019@appsrv-0ink.rhcloud.com
openshift_bak wp3 5818a16c7628e11147000040@wp3-0ink.rhcloud.com

wait

echo "Z. snapshots"
SSH_AUTH_SOCK= ssh -i $world/backup_operator.key root@cn1 snapshot

echo DAILY RUNTIME: $(expr $(date +%s) - $start) seconds
echo ''


