#!/bin/bash
alpine_mirror=http://nl.alpinelinux.org/alpine

set -eu -o pipefail

if ! sudo true ; then
  echo "Exiting... the rest of the script requires sudo priviledges"
  exit 0
fi

rmount() {
  local chrootdir="$1" d
  [ -z "$chrootdir" ] && return
  for d in dev sys proc tmp
  do
    sudo mount --bind /$d $chrootdir/$d || :
  done
}
rumount() {
  local chrootdir="$1" d
  [ -z "$chrootdir" ] && return
  for d in dev sys proc tmp
  do
    sudo umount $chrootdir/$d || :
  done
}

run_alpine() {
  # Create Alpine Linux packages
  local release="$1" version ; shift

  case "$release" in
    3.7)  version=2.9.1-r2 ;;
    *) echo "Unsupported release: $release"; exit 1 ;;
  esac
  
  local alpine_dir=alpine-v$release
  mkdir -p ${alpine_dir}
  
  local apkfile=$alpine_dir/apk-tools-static.apk
  [ ! -f $apkfile  ] && wget -O$apkfile ${alpine_mirror}/v${release}/main/x86_64/apk-tools-static-${version}.apk
  [ ! -f $alpine_dir/sbin/apk.static ] && tar -zxf $apkfile -C $alpine_dir

  local chrootdir=$alpine_dir/chroot
  sudo $alpine_dir/sbin/apk.static \
	  --repository ${alpine_mirror}/v${release}/main \
	  -U \
	  --allow-untrusted \
	  --root ${chrootdir} \
	  --initdb \
	  add alpine-base alpine-sdk gdbm gdbm-dev

  sudo chmod 777 $chrootdir

  grep -q "^$USER:" $chrootdir/etc/group || sudo chroot $chrootdir addgroup -g $(id -g) $USER
  grep -q "^$USER:" $chrootdir/etc/passwd || sudo chroot $chrootdir adduser -D -G $USER -u $(id -u) $USER
  echo "aliuly ALL=(ALL) NOPASSWD:ALL" | sudo tee $chrootdir/etc/sudoers.d/$USER
  echo "${alpine_mirror}/v${release}/main" | sudo tee $chrootdir/etc/apk/repositories
  sudo cp /etc/resolv.conf $chrootdir/etc/resolv.conf

  rmount $chrootdir; trap "rumount $chrootdir" EXIT
  sudo chroot $chrootdir su - -s /bin/sh $USER
  rumount $chrootdir ; trap "" EXIT
}

run_alpine 3.7

